services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 890803306
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: no
    profiles: [ all , essential]

  redis:
    image: redis:latest
    container_name: redis
    command: [
      "redis-server",
      "--requirepass", "890803306",
      "--aclfile", "/usr/local/etc/redis/acl.conf"
    ]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/acl.conf:/usr/local/etc/redis/acl.conf
    restart: no
    profiles: [ all , essential]

  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=emdjoo
      - MONGO_INITDB_ROOT_PASSWORD=890803306
    volumes:
      - ./mongo-data:/data/db
    restart: no
    profiles: [ all , essential]


  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    restart: no
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    profiles: [ all , kafka]  

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [ zookeeper ]
    restart: no
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
      - "29092:29092"
    profiles: [ all , kafka]  

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8081:8081
    restart: no
    depends_on: [ zookeeper,kafka ]
    profiles: [ all , kafka]  

  localstack:
    image: localstack/localstack
    restart: no
    container_name: localstack
    ports:
      - "127.0.0.1:4566:4566"  
      - "127.0.0.1:4510-4559:4510-4559"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - DEBUG=0
    profiles: [ all , localstack]  

volumes:
  postgres_data:
  redis_data:

